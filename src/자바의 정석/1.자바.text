자바란?(15p)
    썬 마이크로시스템즈에서 개발하여 1996년 1월 발표한 객체지향 프로그래밍 언어
    운영체제에 독립적이라는 특징.
    풍부한 클래스 라이브러리.

자바의 특징
    1. 운영체제에 독립적 : 일종의 에뮬레이터인 JVM을 통해서 가능.
    2. 객체지향 언어 : 객체지향의 특징인 상속, 캡슐화, 다형성이 잘 적용된 순수한 객체지향언어
    3. 배우기 쉬움 : C++과 스몰톡의 장점은 취하고 불필요한 부분은 과감히 제거했음
    4. 자동 메모리 관리 : 자바로 작성된 프로그램이 실행되면 가비지 컬렉터가 자동적으로 메모리를 관리해줌.
    5. 네트워크와 분산처리 지원 : 다양한 네트워크 프로그래밍 라이브러리로 네트워크 관련 프로그램 개발을 지원
    6. 멀티쓰레드를 지원 : 시스템과 관계없이 구현 가능, 관련된 라이브러리도 제공됨. 인터프리터가 여러 쓰레드에 대한 스케줄링을 담당
    7. 동적로딩을 지원 : 실행 시 모든 클래스가 로딩되지 않고 필요한 시점에 클래스를 로딩하여 사용 가능.

JVM
    Java virtual machine. 자바를 실행하기 위한 가상 기계(컴퓨터).
    * 가상기계란 소프트웨어로 구현된 하드웨어를 뜻하는 넓은 의미의 용어. ex.TV를 소프트웨어화한 윈도우 미디어 플레이어
    자바로 작성된 어플리케이션은 모두 이 JVM에서만 실행됨. 일반 어플리케이션 코드는 OS만 거치고 하드웨어로 가는 반면 java는 JVM을 한번 더 거치고
    하드웨어에 맞게 완전히 컴파일된 상태가 아니고 실행 시 해석되어 속도가 느림. JVM은 OS에 종속적이라 해당 OS의 JVM이 필요한

자바 개발도구(19p)s
    JDK의 bin 디렉토리에 있는 주요 실행파일 특징
    javac.exe - 자바 컴파일러. 자바소스코드 -> 바이트코드로 컴파일
    * 바이트 코드 : JVM이 이해할 수 있는 기계어
    java.exe - 자바 인터프리터. 컴파일러가 생성한 바이트코드를 해석 및 실행
    javap.exe - 역어셈블러. 컴파일된 클래스를 원래 소스로 변환
    * JDK vs JRE : JDK = JRE+개발에 필요한 실행파일(javac.exe등) / JRE = JVM+클래스라이브러리

자바 API문서
    http://java.sun.com/

