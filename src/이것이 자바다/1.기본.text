자바의 특징
    1. 모든 운영체제에서 실행 가능
    2. 객체지향 프로그래밍
    3. 메모리 자동 정리
    4. 풍부한 무료 라이브러리

운영체제별 JDK
    Open JDK : 무료, GNU GPL version2 라이선스
    Oracle JDK : 개발 및 학습용은 무료, 상업용은 유료. Oracle Teclinology Network 라이선스

바이트코드 파일
    javac(java compiler) 명령어는 소스파일을 컴파일함. 자바 소스파일 -> (javac명령어 실행) -> 바이트코드파일

자바 가상 머신
    바이트코드파일(.class)을 특정 운영체제가 이해하는 기계어로 번역/실행시키는 명령어는 java.
    자바 소스파일 -> (javac명령어 실행) -> 바이트코드파일 -> (java명령어) -> 윈도우용/맥용 JVM

컴파일 된 바이트코트 파일 위치?(27p)
    프로젝트 디렉토리 안 bin 티렉토리에 패키지 디렉토리와 함께 저장됨.

변수 선언
    변수는 하나의 값을 저장할 수 있는 메모리 번지에 붙여진 이름.
    변수에 최초로 값을 대입하는 행위를 변수 초기화라고 함. 초기화되지 않은 변수는 아직 메모리에 할당되지 않아 변수를 통해 메모리값을 읽을 수 없음.
    
    int score; // 변수 선언
    score = 90; // 값 대입

정수 타입(41p)
    메모리 사용 크기(bit) : byte(8), short(16), int(32), long(64)

    2진수  : 0b또는 0B로 시작하고 0, 1로 작성 ex) int x = 0b1011;
    8진수  : 0으로 시작하고 0~7숫자로 작성 ex) int x = 013;
    10진수 : 소수점이 없는 0~9숫자로 작성 ex) int x = 12;
    16진수 : 0x또는 0X로 시작하고 0~9숫자나 A,B,C,D,E,F 또는 a,b,c,d,e,f로 작성 ex) int x = 0xB3;

문자 타입(45p)
    하나의 문자를 작은 따옴표('')로 감싼 것을 문자 리터럴이라고 함. 이것은 유니코드로 변환되어 저장되는데, 세계 각국 문자를 0~65535숫자로 매핑한 국제표준규약.
    char var1 = 'A'; // 65로 대입
    char var2 = '가'; // 44032로 대입
    유니코드가 정수이므로 char타입도 정수 타입에 속함.

실수 타입(47p)
    float  : 4byte(32bit), 유효 소수 이하 자리 7자리
    double : 8byte(64bit), 유효 소수 이하 자리 15자리
    실수는 double이 기본이라 float를 사용하고 싶으면 리터럴 뒤에 f나 F를 붙여야됨.

논리 타입(50p)
    true/false.

문자열 타입(51p)
    작은 따옴표로 감싼 한개의 문자는 char타입이지만 큰따옴표로 감싼 문자들은 유니코드로 변환되지 않음. String을 사용해야됨.
    String var1 = "A";
    String var2 = "홍길동";
    문자열 내부에 역슬래쉬(\)가 붙은 문자를 사용할 수 있고 특정문자 사용 가능(\", \\, \u16진수, \t(탭만큼 띄움), \n(줄바꿈))